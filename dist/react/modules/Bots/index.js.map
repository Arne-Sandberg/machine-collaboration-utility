{"version":3,"sources":["modules/Bots/index.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEe,MAAM,IAAN,SAAmB,gBAAM,SAAzB,CAAmC;AAChD,cAAY,KAAZ,EAAmB;AACjB,UAAM,KAAN;AACA,SAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAK,MAAL,GAAc,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAK,UAAL,GAAkB,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAK,oBAAL,GAA4B,KAAK,oBAAL,CAA0B,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAK,eAAL,GAAuB,KAAK,eAAL,CAAqB,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAK,UAAL,GAAkB,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAlB;;AAEA,SAAK,KAAL,GAAa;AACX,iBAAW,KADA;AAEX,mBAAa,qBAAE,KAAF,CAAQ,MAAM,IAAd,EAAoB,MAApB,GAA6B,CAA7B,GAAiC,qBAAE,KAAF,CAAQ,MAAM,IAAd,EAAoB,CAApB,EAAuB,CAAvB,CAAjC,GAA4D,SAF9D;AAGX,sBAAgB,qBAAE,KAAF,CAAQ,MAAM,UAAd,EAA0B,CAA1B,EAA6B,CAA7B;AAHL,KAAb;AAKD;;AAED,aAAW,KAAX,EAAkB;AAChB,UAAM,YAAY,OAAO,MAAP,CAAc,EAAd,EAAkB,KAAK,KAAL,CAAW,cAA7B,CAAlB;AACA,cAAU,QAAV,CAAmB,MAAM,MAAN,CAAa,IAAhC,IAAwC,MAAM,MAAN,CAAa,KAArD;AACA,SAAK,QAAL,CAAc,EAAE,gBAAgB,SAAlB,EAAd;AACD;;AAED,kBAAgB,KAAhB,EAAuB;AACrB,SAAK,QAAL,CAAc;AACZ,mBAAa,MAAM,MAAN,CAAa;AADd,KAAd;AAGD;;AAED,YAAU,GAAV,EAAe;AACb,WAAO;AAAA;AAAA;AAAM,UAAI,QAAJ,CAAa;AAAnB,KAAP;AACD;;AAED,gBAAc;AACZ,SAAK,QAAL,CAAc;AACZ,iBAAW,CAAC,KAAK,KAAL,CAAW;AADX,KAAd;AAGD;;AAED,eAAa;AACX,SAAK,QAAL,CAAc,EAAE,WAAW,KAAb,EAAd;AACD;;AAED,kBAAgB;AACd,QAAI,aAAa,KAAjB;AACA,UAAM,eAAe,qBAAE,KAAF,CAAQ,KAAK,KAAL,CAAW,IAAnB,EAAyB,GAAzB,CAA6B,QAAoB;AAAA;;AAAA,UAAlB,OAAkB;AAAA,UAAT,GAAS;;AACpE,YAAM,eAAe;AAAA;AAAA,UAAO,YAAP,EAAc,KAAK,OAAnB,EAA4B,MAAK,SAAjC,EAA2C,cAAc,OAAzD,EAAkE,SAAS,KAAK,KAAL,CAAW,WAAX,KAA2B,OAAtG;AAAgH,YAAI,QAAJ,CAAa;AAA7H,OAArB;AACA,UAAI,CAAC,UAAL,EAAiB;AACf,qBAAa,IAAb;AACD;AACD,aAAO,YAAP;AACD,KANoB,CAArB;AAOA,iBAAa,IAAb,CAAkB;AAAA;AAAA,QAAQ,KAAI,WAAZ,EAAwB,SAAS,KAAK,WAAtC;AAAA;AAAA,KAAlB;AACA,WACE;AAAA;AAAA,QAAW,UAAU,KAAK,eAA1B;AACG;AADH,KADF;AAKD;;AAED,uBAAqB,KAArB,EAA4B;AAC1B,SAAK,QAAL,CAAc,EAAE,gBAAgB,KAAK,KAAL,CAAW,UAAX,CAAsB,MAAM,MAAN,CAAa,KAAnC,CAAlB,EAAd;AACD;;AAED,qBAAmB;AACjB,UAAM,UAAU,qBAAE,KAAF,CAAQ,KAAK,KAAL,CAAW,UAAnB,EAA+B,GAA/B,CAAmC,SAA+B;AAAA;;AAAA,UAA7B,YAA6B;AAAA,UAAf,SAAe;;AAChF,cAAQ,UAAU,IAAV,CAAe,cAAvB;AACE,aAAK,SAAL;AACA,aAAM,QAAN;AACE;AACF;AACE;AALJ;AAOA,aAAO;AAAA;AAAA,UAAQ,KAAK,YAAb,EAA2B,OAAO,YAAlC;AAAiD,kBAAU,QAAV,CAAmB;AAApE,OAAP;AACD,KATe,CAAhB;AAUA,WACE;AAAA;AAAA,QAAQ,UAAU,KAAK,oBAAvB,EAA6C,MAAK,SAAlD,EAA4D,MAAK,YAAjE;AACG;AADH,KADF;AAKD;;AAED,iBAAe,cAAf,EAA+B;AAC7B,YAAQ,cAAR;AACE,WAAK,YAAL;AACA,WAAK,QAAL;AACA,WAAK,SAAL;AACE,eAAQ;AAAA;AAAA;AACN;AAAA;AAAA,cAAO,SAAS,UAAhB;AAAA;AAAA,WADM;AAEN,mDAAO,UAAU,KAAK,UAAtB,EAAkC,MAAK,UAAvC,EAAkD,MAAM,UAAxD,EAAoE,cAAc,kBAAlF,GAFM;AAGN;AAHM,SAAR;AAKF;AACE,eAAO,yCAAO,MAAK,QAAZ,EAAqB,MAAM,UAA3B,EAAuC,OAAO,SAA9C,GAAP;AAVJ;AAYD;;AAED,qBAAmB;AACjB,WAAQ;AAAA;AAAA;AAEN,+CAAO,MAAK,QAAZ,EAAqB,MAAM,OAA3B,EAAoC,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,KAA9E,GAFM;AAIN;AAAA;AAAA,UAAO,SAAS,MAAhB;AAAA;AAAA,OAJM;AAKN,+CAAO,UAAU,KAAK,UAAtB,EAAkC,MAAK,UAAvC,EAAkD,MAAM,MAAxD,EAAgE,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,IAA1G,GALM;AAMN,+CANM;AAQL,WAAK,cAAL,CAAoB,KAAK,KAAL,CAAW,cAAX,CAA0B,IAA1B,CAA+B,cAAnD,CARK;AAUN;AAAA;AAAA,UAAO,SAAS,WAAhB;AAAA;AAAA,OAVM;AAWN,+CAAO,UAAU,KAAK,UAAtB,EAAkC,MAAK,UAAvC,EAAkD,MAAM,WAAxD,EAAqE,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,SAA/G,GAXM;AAYN,+CAZM;AAcN;AAAA;AAAA,UAAO,SAAS,WAAhB;AAAA;AAAA,OAdM;AAeN,+CAAO,UAAU,KAAK,UAAtB,EAAkC,MAAK,UAAvC,EAAkD,MAAM,WAAxD,EAAqE,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,SAA/G,GAfM;AAgBN,+CAhBM;AAkBN;AAAA;AAAA,UAAO,SAAS,WAAhB;AAAA;AAAA,OAlBM;AAmBN,+CAAO,UAAU,KAAK,UAAtB,EAAkC,MAAK,UAAvC,EAAkD,MAAM,WAAxD,EAAqE,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,SAA/G,GAnBM;AAoBN,+CApBM;AAsBN;AAAA;AAAA,UAAO,SAAS,WAAhB;AAAA;AAAA,OAtBM;AAuBN,+CAAO,UAAU,KAAK,UAAtB,EAAkC,MAAK,UAAvC,EAAkD,MAAM,WAAxD,EAAqE,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,SAA/G,GAvBM;AAwBN,+CAxBM;AA0BN;AAAA;AAAA,UAAO,SAAS,OAAhB;AAAA;AAAA,OA1BM;AA2BN,+CAAO,UAAU,KAAK,UAAtB,EAAkC,MAAK,UAAvC,EAAkD,MAAM,OAAxD,EAAiE,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,KAA3G,GA3BM;AA4BN,+CA5BM;AA8BN;AAAA;AAAA,UAAO,SAAS,OAAhB;AAAA;AAAA,OA9BM;AA+BN,+CAAO,UAAU,KAAK,UAAtB,EAAkC,MAAK,UAAvC,EAAkD,MAAM,OAAxD,EAAiE,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,KAA3G,GA/BM;AAgCN,+CAhCM;AAkCN,+CAAO,MAAK,QAAZ,EAAqB,MAAM,YAA3B,EAAyC,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,UAAnF,GAlCM;AAmCN,+CAAO,MAAK,QAAZ,EAAqB,MAAM,QAA3B,EAAqC,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,MAA/E,GAnCM;AAoCN,+CAAO,MAAK,QAAZ,EAAqB,MAAM,SAA3B,EAAsC,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,OAAhF,GApCM;AAqCN,+CAAO,MAAK,QAAZ,EAAqB,MAAM,SAA3B,EAAsC,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,OAAhF,GArCM;AAsCN,+CAAO,MAAK,QAAZ,EAAqB,MAAM,SAA3B,EAAsC,OAAO,KAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,CAAmC,OAAhF;AAtCM,KAAR;AAyCD;;AAED,SAAO,KAAP,EAAc;AACZ,SAAK,UAAL;AACA,UAAM,cAAN;;AAEA,yBAAQ,IAAR,CAAc,UAAd,EACC,IADD,CACM,EAAE,MAAM,MAAM,MAAN,CAAa,IAAb,CAAkB,KAA1B,EADN,EAEC,IAFD,CAEM,EAAE,OAAO,MAAM,MAAN,CAAa,KAAb,CAAmB,KAA5B,EAFN,EAGC,IAHD,CAGM,EAAE,UAAU,MAAM,MAAN,CAAa,QAAb,CAAsB,KAAlC,EAHN,EAIC,IAJD,CAIM,EAAE,WAAW,MAAM,MAAN,CAAa,SAAb,CAAuB,KAApC,EAJN,EAKC,IALD,CAKM,EAAE,WAAW,MAAM,MAAN,CAAa,SAAb,CAAuB,KAApC,EALN,EAMC,IAND,CAMM,EAAE,WAAW,MAAM,MAAN,CAAa,SAAb,CAAuB,KAApC,EANN,EAOC,IAPD,CAOM,EAAE,WAAW,MAAM,MAAN,CAAa,SAAb,CAAuB,KAApC,EAPN,EAQC,IARD,CAQM,EAAE,OAAO,MAAM,MAAN,CAAa,KAAb,CAAmB,KAA5B,EARN,EASC,IATD,CASM,EAAE,OAAO,MAAM,MAAN,CAAa,KAAb,CAAmB,KAA5B,EATN,EAUC,IAVD,CAUM,EAAE,YAAY,MAAM,MAAN,CAAa,UAAb,CAAwB,KAAtC,EAVN,EAWC,IAXD,CAWM,EAAE,QAAQ,MAAM,MAAN,CAAa,MAAb,CAAoB,KAA9B,EAXN,EAYC,IAZD,CAYM,EAAE,SAAS,MAAM,MAAN,CAAa,OAAb,CAAqB,KAAhC,EAZN,EAaC,IAbD,CAaM,EAAE,SAAS,MAAM,MAAN,CAAa,OAAb,CAAqB,KAAhC,EAbN,EAcC,IAdD,CAcM,EAAE,SAAS,MAAM,MAAN,CAAa,OAAb,CAAqB,KAAhC,EAdN,EAeC,GAfD,CAeK,QAfL,EAee,kBAff,EAgBC,GAhBD;AAiBD;;AAED,4BAA0B,SAA1B,EAAqC;AACnC,QAAI,cAAc,KAAK,KAAL,CAAW,WAA7B;AACA,QAAI,qBAAE,KAAF,CAAQ,UAAU,IAAlB,EAAwB,MAAxB,IAAkC,CAAtC,EAAyC;AACvC,oBAAc,SAAd;AACD,KAFD,MAEO;AACL,UAAI,UAAU,IAAV,CAAe,KAAK,KAAL,CAAW,WAA1B,MAA2C,SAA/C,EAA0D;AACxD,sBAAc,qBAAE,KAAF,CAAQ,UAAU,IAAlB,EAAwB,MAAxB,GAAiC,CAAjC,GACZ,qBAAE,KAAF,CAAQ,UAAU,IAAlB,EAAwB,CAAxB,EAA2B,CAA3B,CADY,GACoB,SADlC;AAED;AACF;AACD,QAAI,KAAK,KAAL,CAAW,WAAX,KAA2B,WAA/B,EAA4C;AAC1C,WAAK,QAAL,CAAc,EAAE,aAAa,WAAf,EAAd;AACD;AACF;;AAED,WAAS;AACP,QAAI,WAAJ;AACA,QAAI,UAAJ;AACA,QAAI,KAAK,KAAL,CAAW,WAAX,KAA2B,SAA/B,EAA0C;AACxC,oBAAc,SAAd;AACA,mBAAa,SAAb;AACD,KAHD,MAGO;AACL,oBAAc,KAAK,KAAL,CAAW,IAAX,CAAgB,KAAK,KAAL,CAAW,WAA3B,CAAd;AACA,mBAAa,YAAY,UAAZ,KAA2B,SAA3B,GAAuC,SAAvC,GAAmD,YAAY,UAA5E;AACD;;AAED,UAAM,QAAQ,KAAK,KAAL,CAAW,WAAX,KAA2B,SAA3B,GAAuC,EAAvC,GAA4C,+CAAK,YAAY,UAAjB,EAA6B,YAAY,KAAK,KAAL,CAAW,UAApD,EAAgE,YAAY,KAAK,KAAL,CAAW,UAAvF,EAAmG,KAAK,WAAxG,GAA1D;;AAEA,WACE;AAAA;AAAA;AACG,WAAK,aAAL,EADH;AAEG,WAFH;AAGE;AAAA;AAAA,UAAO,MAAM,KAAK,KAAL,CAAW,SAAxB,EAAmC,QAAQ,KAAK,UAAhD;AACE;AAAA,0BAAO,MAAP;AAAA,YAAc,iBAAd;AACE;AAAA,4BAAO,KAAP;AAAA;AAAA;AAAA;AADF,SADF;AAIE;AAAA,0BAAO,IAAP;AAAA;AACG,eAAK,gBAAL,EADH;AAEE;AAAA;AAAA,cAAM,UAAU,KAAK,MAArB;AACG,iBAAK,gBAAL,EADH;AAEE,qDAAO,MAAK,QAAZ,EAAqB,OAAM,YAA3B;AAFF;AAFF;AAJF;AAHF,KADF;AAkBD;AAlN+C;kBAA7B,I","file":"modules/Bots/index.js","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/lib/Modal';\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\nimport Radio from 'react-bootstrap/lib/Radio';\nimport Button from 'react-bootstrap/lib/Button';\nimport request from 'superagent';\nimport _ from 'underscore';\n\nimport Bot from './Bot';\n\nexport default class Bots extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.addBot = this.addBot.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.updateSelectedPreset = this.updateSelectedPreset.bind(this);\n    this.handleSelectBot = this.handleSelectBot.bind(this);\n    this.updateText = this.updateText.bind(this);\n\n    this.state = {\n      showModal: false,\n      selectedBot: _.pairs(props.bots).length > 0 ? _.pairs(props.bots)[0][0]: undefined,\n      selectedPreset: _.pairs(props.botPresets)[0][1],\n    };\n  }\n\n  updateText(event) {\n    const newPreset = Object.assign({}, this.state.selectedPreset);\n    newPreset.settings[event.target.name] = event.target.value;\n    this.setState({ selectedPreset: newPreset });\n  }\n\n  handleSelectBot(event) {\n    this.setState({\n      selectedBot: event.target.value,\n    });\n  }\n\n  createBot(bot) {\n    return <div>{bot.settings.name}</div>;\n  }\n\n  toggleModal() {\n    this.setState({\n      showModal: !this.state.showModal,\n    });\n  }\n\n  closeModal() {\n    this.setState({ showModal: false });\n  }\n\n  renderBotList() {\n    let defaultSet = false;\n    const botRadioList = _.pairs(this.props.bots).map(([botUuid, bot]) => {\n      const radioElement = <Radio inline key={botUuid} name=\"botList\" defaultValue={botUuid} checked={this.state.selectedBot === botUuid}>{bot.settings.name}</Radio>;\n      if (!defaultSet) {\n        defaultSet = true;\n      }\n      return radioElement;\n    });\n    botRadioList.push(<Button key=\"createBot\" onClick={this.toggleModal}>Create Bot</Button>);\n    return (\n      <FormGroup onChange={this.handleSelectBot}>\n        {botRadioList}\n      </FormGroup>\n    );\n  }\n\n  updateSelectedPreset(event) {\n    this.setState({ selectedPreset: this.props.botPresets[event.target.value] });\n  }\n\n  createPresetList() {\n    const options = _.pairs(this.props.botPresets).map(([botPresetKey, botPreset]) => {\n      switch (botPreset.info.connectionType) {\n        case undefined:\n        case `serial`:\n          return;\n        default:\n          break;\n      }\n      return <option key={botPresetKey} value={botPresetKey}>{botPreset.settings.name}</option>;\n    });\n    return (\n      <select onChange={this.updateSelectedPreset} name=\"botList\" form=\"newBotForm\">\n        {options}\n      </select>\n    );\n  }\n\n  renderEndpoint(connectionType) {\n    switch (connectionType) {\n      case 'hydraprint':\n      case 'telnet':\n      case 'virtual':\n        return (<div>\n          <label htmlFor={'endpoint'}>Endpoint</label>\n          <input onChange={this.updateText} type=\"textarea\" name={'endpoint'} defaultValue={'http://127.0.0.1'} />\n          <br/>\n        </div>);\n      default:\n        return <input type=\"hidden\" name={'endpoint'} value={undefined} />;\n    }\n  }\n\n  createNewBotForm() {\n    return (<div>\n\n      <input type=\"hidden\" name={'model'} value={this.state.selectedPreset.settings.model} />\n\n      <label htmlFor={'name'}>Name</label>\n      <input onChange={this.updateText} type=\"textarea\" name={'name'} value={this.state.selectedPreset.settings.name} />\n      <br/>\n\n      {this.renderEndpoint(this.state.selectedPreset.info.connectionType)}\n\n      <label htmlFor={'jogXSpeed'}>Jog Speed X</label>\n      <input onChange={this.updateText} type=\"textarea\" name={'jogXSpeed'} value={this.state.selectedPreset.settings.jogXSpeed} />\n      <br/>\n\n      <label htmlFor={'jogYSpeed'}>Jog Speed Y</label>\n      <input onChange={this.updateText} type=\"textarea\" name={'jogYSpeed'} value={this.state.selectedPreset.settings.jogYSpeed} />\n      <br/>\n\n      <label htmlFor={'jogZSpeed'}>Jog Speed Z</label>\n      <input onChange={this.updateText} type=\"textarea\" name={'jogZSpeed'} value={this.state.selectedPreset.settings.jogZSpeed} />\n      <br/>\n\n      <label htmlFor={'jogESpeed'}>Jog Speed E</label>\n      <input onChange={this.updateText} type=\"textarea\" name={'jogESpeed'} value={this.state.selectedPreset.settings.jogESpeed} />\n      <br/>\n\n      <label htmlFor={'tempE'}>Default Extruder Temp</label>\n      <input onChange={this.updateText} type=\"textarea\" name={'tempE'} value={this.state.selectedPreset.settings.tempE} />\n      <br/>\n\n      <label htmlFor={'tempB'}>Default Bed Temp</label>\n      <input onChange={this.updateText} type=\"textarea\" name={'tempB'} value={this.state.selectedPreset.settings.tempB} />\n      <br/>\n\n      <input type=\"hidden\" name={'speedRatio'} value={this.state.selectedPreset.settings.speedRatio} />\n      <input type=\"hidden\" name={'eRatio'} value={this.state.selectedPreset.settings.eRatio} />\n      <input type=\"hidden\" name={'offsetX'} value={this.state.selectedPreset.settings.offsetX} />\n      <input type=\"hidden\" name={'offsetY'} value={this.state.selectedPreset.settings.offsetY} />\n      <input type=\"hidden\" name={'offsetZ'} value={this.state.selectedPreset.settings.offsetZ} />\n\n    </div>);\n  }\n\n  addBot(event) {\n    this.closeModal();\n    event.preventDefault();\n\n    request.post(`/v1/bots`)\n    .send({ name: event.target.name.value })\n    .send({ model: event.target.model.value })\n    .send({ endpoint: event.target.endpoint.value })\n    .send({ jogXSpeed: event.target.jogXSpeed.value })\n    .send({ jogYSpeed: event.target.jogYSpeed.value })\n    .send({ jogZSpeed: event.target.jogZSpeed.value })\n    .send({ jogESpeed: event.target.jogESpeed.value })\n    .send({ tempE: event.target.tempE.value })\n    .send({ tempB: event.target.tempB.value })\n    .send({ speedRatio: event.target.speedRatio.value })\n    .send({ eRatio: event.target.eRatio.value })\n    .send({ offsetX: event.target.offsetX.value })\n    .send({ offsetY: event.target.offsetY.value })\n    .send({ offsetZ: event.target.offsetZ.value })\n    .set('Accept', 'application/json')\n    .end();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let newBotState = this.state.selectedBot;\n    if (_.pairs(nextProps.bots).length <= 0) {\n      newBotState = undefined;\n    } else {\n      if (nextProps.bots[this.state.selectedBot] === undefined) {\n        newBotState = _.pairs(nextProps.bots).length > 0 ?\n          _.pairs(nextProps.bots)[0][0] : undefined;\n      }\n    }\n    if (this.state.selectedBot !== newBotState) {\n      this.setState({ selectedBot: newBotState });\n    }\n  }\n\n  render() {\n    let selectedBot;\n    let currentJob;\n    if (this.state.selectedBot === undefined) {\n      selectedBot = undefined;\n      currentJob = undefined;\n    } else {\n      selectedBot = this.props.bots[this.state.selectedBot];\n      currentJob = selectedBot.currentJob === undefined ? undefined : selectedBot.currentJob;\n    }\n\n    const daBot = this.state.selectedBot === undefined ? '' : <Bot currentJob={currentJob} conducting={this.props.conducting} botPresets={this.props.botPresets} bot={selectedBot}/>;\n\n    return (\n      <div>\n        {this.renderBotList()}\n        {daBot}\n        <Modal show={this.state.showModal} onHide={this.closeModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Create Bot</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {this.createPresetList()}\n            <form onSubmit={this.addBot}>\n              {this.createNewBotForm()}\n              <input type=\"submit\" value=\"Create Bot\"/>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"/source/"}