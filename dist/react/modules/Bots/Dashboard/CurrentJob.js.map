{"version":3,"sources":["modules/Bots/Dashboard/CurrentJob.js"],"names":[],"mappings":"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","file":"modules/Bots/Dashboard/CurrentJob.js","sourcesContent":["import React from 'react';\nimport request from 'superagent';\nimport ProgressBar from 'react-bootstrap/lib/ProgressBar';\nimport Button from 'react-bootstrap/lib/Button';\n\nexport default class CurrentJob extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sendCommand = this.sendCommand.bind(this);\n    this.cancelJob = this.cancelJob.bind(this);\n  }\n\n  sendCommand(command) {\n    request.post(`/v1/bots/${this.props.bot.settings.uuid}`)\n    .send({ command })\n    .set('Accept', 'application/json')\n    .end();\n  }\n\n  cancelJob() {\n    request.post(`/v1/jobs/${this.props.bot.currentJob.uuid}`)\n    .send({ command: `cancel` })\n    .set('Accept', 'application/json')\n    .end();\n  }\n\n  renderConnectButton() {\n    switch (this.props.bot.state) {\n      case `unavailable`:\n        return <Button onClick={() => { this.sendCommand('checkSubscription') } }>Detect</Button>;\n      case `detecting`:\n      case `ready`:\n      case `startingJob`:\n      case `stopping`:\n      case `parking`:\n      case `unparking`:\n      case `connecting`:\n        return <Button onClick={() => { this.sendCommand('connect') } }>Connect</Button>;\n      default:\n        return <Button onClick={() => { this.sendCommand('disconnect') } }>Disconnect</Button>;\n    }\n  }\n\n  renderPauseButton() {\n    if (this.props.bot.currentJob === undefined) {\n      return <Button disabled>Pause/Resume</Button>;\n    }\n\n    switch (this.props.bot.currentJob.state) {\n      case `paused`:\n        return <Button onClick={ () => { this.sendCommand('resume') } }>Resume</Button>;\n      case `running`:\n        return <Button onClick={ () => { this.sendCommand('pause') } }>Pause</Button>;\n      default:\n        return <Button disabled>{this.props.bot.currentJob.state}</Button>;\n    }\n  }\n\n  renderCancelButton() {\n    if (this.props.bot.currentJob === undefined) {\n      return <Button bsStyle=\"danger\" disabled>Cancel</Button>;\n    }\n    return <Button bsStyle=\"danger\" onClick={this.cancelJob}>Cancel</Button>;\n  }\n\n  renderProgressBar() {\n    if (this.props.bot.currentJob === undefined) {\n      return <ProgressBar now={0}/>;\n    }\n    const percentComplete = this.props.bot.currentJob.percentComplete;\n    return <ProgressBar active now={percentComplete} label={`${percentComplete}%`} />;\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Current Job!</h3>\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            {this.renderConnectButton()}\n          </div>\n          <div className=\"col-sm-4\">\n            {this.renderPauseButton()}\n          </div>\n          <div className=\"col-sm-4\">\n            {this.renderCancelButton()}\n          </div>\n        </div>\n        <br/>\n        {this.renderProgressBar()}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"/source/"}